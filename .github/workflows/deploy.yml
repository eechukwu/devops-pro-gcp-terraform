name: Terraform Deployment

on:
  workflow_dispatch:
    inputs:
      modules:
        description: 'Modules to deploy (e.g., network, compute_instance)'
        required: true
        default: 'all'
      force_unlock:
        description: 'Set to true to force unlock Terraform state'
        required: false
        default: 'false'

jobs:
  terraform:
    name: Terraform CI/CD
    runs-on: ubuntu-latest
    env:
      TF_ROOT: './terraform/environments/dev'
      LOCK_ID: '1700469765024911'  # Replace with the actual lock ID

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: gcp-devops-pro-405617
          export_default_credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.0'

      - name: Force Unlock Terraform State (if requested)
        if: ${{ github.event.inputs.force_unlock }} == 'true'
        run: |
          echo "Forcing unlock of Terraform state..."
          terraform force-unlock -force ${{ env.LOCK_ID }}
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Init
        run: terraform init -input=false -backend=true
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Plan
        run: terraform plan
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve
        working-directory: ${{ env.TF_ROOT }}
