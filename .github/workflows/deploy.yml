name: Terraform Deployment  # Name of the GitHub Actions workflow

on:
  push:  # Triggers the workflow on push events to the specified branches
    branches:
      - main

jobs:
  terraform:
    name: Terraform CI/CD  # Name of the job
    runs-on: ubuntu-latest  # Specifies the operating system for the job

    strategy:
      matrix:
        resource: [compute_instance, network]  # Specify the resource names you want to deploy

    steps:
      - name: Checkout Repository  # Step to check out the repository
        uses: actions/checkout@v2

      - name: Setup Google Cloud  # Step to set up Google Cloud
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}  # Specifies the service account key
          project_id: gcp-devops-pro-405617  # Specifies the project ID
          export_default_credentials: true  # Exports default credentials

      - name: Setup Terraform  # Step to set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.0'  # Specifies the Terraform version

      - name: Terraform Init  # Step to initialize Terraform
        run: terraform init
        working-directory: ./terraform/environments/dev  # Specifies the working directory for the command

      - name: Terraform Validate  # Step to validate Terraform configuration
        run: terraform validate
        working-directory: ./terraform/environments/dev  # Specifies the working directory for the command

      - name: Terraform Plan  # Step to create an execution plan
        run: terraform plan -target=module.${{ matrix.resource }}
        working-directory: ./terraform/environments/dev  # Specifies the working directory for the command

      - name: Terraform Apply  # Step to apply the Terraform execution plan
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Condition to run the step
        run: terraform apply -target=module.${{ matrix.resource }} -auto-approve
        working-directory: ./terraform/environments/dev  # Specifies the working directory for the command
