name: Deploy Infra Via Terraform

on:
  workflow_dispatch:
    inputs:
      modules:
        description: 'Modules to deploy (e.g., "network", "compute_instance", or "all")'
        required: true
        default: 'all'  # Default input when none is provided.

jobs:
  terraform-deploy:
    name: Terraform CI/CD
    runs-on: ubuntu-latest
    env:
      TF_ROOT: './terraform/environments/dev'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.1.0'

      - name: Terraform Init
        run: terraform init -input=false -backend=true
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Validate
        run: terraform validate
        working-directory: ${{ env.TF_ROOT }}

      - name: Terraform Plan
        run: |
          if [ "${{ github.event.inputs.modules }}" == "all" ]; then
            terraform plan
          else
            IFS=',' read -ra MODULES <<< "${{ github.event.inputs.modules }}"
            for module in "${MODULES[@]}"; do
              terraform plan -target=module.${module}
            done
          fi
        working-directory: ${{ env.TF_ROOT }}
        continue-on-error: true

      - name: Display Terraform Plan Output
        run: cat terraform.tfplan
        working-directory: ${{ env.TF_ROOT }}
        if: failure()

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
        run: |
          if [ "${{ github.event.inputs.modules }}" == "all" ]; then
            terraform apply -auto-approve
          else
            IFS=',' read -ra MODULES <<< "${{ github.event.inputs.modules }}"
            for module in "${MODULES[@]}"; do
              terraform apply -auto-approve -target=module.${module}
            done
          fi
        working-directory: ${{ env.TF_ROOT }}
