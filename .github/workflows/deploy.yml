# Name of the workflow
name: Terraform Deployment

# Triggers for the workflow: on push or pull request to the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Job definition
jobs:
  terraform:
    # Name of the job
    name: Terraform

    # Specifies the type of virtual host machine to run the job on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      # Sets up the Terraform CLI in the GitHub Actions runner environment
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # Optional: Terraform Cloud (or Enterprise) API token for remote operations
          cli_config_credentials_token: ${{ secrets.TERRAFORM_API_TOKEN }}

      # Initializes Terraform, which includes initializing the backend and downloading provider plugins
      - name: Terraform Initialize
        run: terraform init

      # Checks if the Terraform code is formatted correctly
      - name: Terraform Format Check
        run: terraform fmt -check

      # Creates a Terraform plan and shows the changes that will be made to your infrastructure
      - name: Terraform Plan
        run: terraform plan

      # Applies the Terraform plan to create or update infrastructure.
      # Note: This step only runs on the 'main' branch to prevent accidental deployments.
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
